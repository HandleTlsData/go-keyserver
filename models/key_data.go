// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KeyData key data
// Example: {"Description":"Description","ID":0,"Name":"Name","Status":"Status"}
//
// swagger:model KeyData
type KeyData struct {

	// created by
	CreatedBy string `json:"CreatedBy,omitempty"`

	// data
	Data string `json:"Data,omitempty"`

	// expire
	// Example: 2019-05-17
	// Pattern: /(?:[0-9]{4})-(?:[0-9]{2})-(?:[0-9]{2})/
	Expire string `json:"Expire,omitempty"`

	// ID
	ID int64 `json:"ID,omitempty"`

	// valid
	Valid bool `json:"Valid,omitempty"`
}

// Validate validates this key data
func (m *KeyData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpire(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KeyData) validateExpire(formats strfmt.Registry) error {
	if swag.IsZero(m.Expire) { // not required
		return nil
	}

	if err := validate.Pattern("Expire", "body", m.Expire, `/(?:[0-9]{4})-(?:[0-9]{2})-(?:[0-9]{2})/`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this key data based on context it is used
func (m *KeyData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *KeyData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KeyData) UnmarshalBinary(b []byte) error {
	var res KeyData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
